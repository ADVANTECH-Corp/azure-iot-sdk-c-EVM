/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.1.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 2019年8月23日
 ***********************************************************************************************/

#ifndef ANCAD_IMPL
#define ANCAD_IMPL

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"
#include "parson.h"

// Device telemetries related APIs

double SensorsInformation_Telemetry_ReadRms_x();

double SensorsInformation_Telemetry_ReadRms_y();

double SensorsInformation_Telemetry_ReadMotor_speed_rpm();

// Callbacks to handle the confirmation result of sending telemetry
void SendTelemetry_Succeeded_Callback(const char* interfaceName, const char* telemetryName);
void SendTelemetry_Error_Callback(const char* interfaceName, const char* telemetryName);

// Callbacks to handle the confirmation result of reporting property
void ReportProperty_Succeeded_Callback(const char* interfaceName, const char* telemetryName);
void ReportProperty_Error_Callback(const char* interfaceName, const char* telemetryName);

// Device properties related APIs

char* DeviceDetailedInformation_Property_GetDeviceName();

char* DeviceDetailedInformation_Property_GetAgentID();

char* DeviceDetailedInformation_Property_GetDeviceGroups();

char* DeviceDetailedInformation_Property_GetWakeOnLAN();

char* DeviceDetailedInformation_Property_GetConnectionStatus();

char* DeviceDetailedInformation_Property_GetAutoReport();

char* DeviceDetailedInformation_Property_GetStatusMessage();

char* DeviceDetailedInformation_Property_GetProduct();

char* DeviceDetailedInformation_Property_GetManufacturer();

char* DeviceDetailedInformation_Property_GetVersion();

char* DeviceDetailedInformation_Property_GetPlatform();

char* DeviceDetailedInformation_Property_GetOperatingSystem();

char* DeviceDetailedInformation_Property_GetMAC();

char* DeviceDetailedInformation_Property_GetCPU();

int DeviceDetailedInformation_Property_GetMemory();

char* DeviceDetailedInformation_Property_GetGrafanaFolder();

char* DeviceDetailedInformation_Property_GetGrafanaBoard();

char* DeviceDetailedInformation_Property_GetLastConnectedAt();

char* DeviceInfo_Property_GetManufacturer();

char* DeviceInfo_Property_GetModel();

char* DeviceInfo_Property_GetSwVersion();

char* DeviceInfo_Property_GetOsName();

char* DeviceInfo_Property_GetProcessorArchitecture();

char* DeviceInfo_Property_GetProcessorManufacturer();

long DeviceInfo_Property_GetTotalStorage();

long DeviceInfo_Property_GetTotalMemory();

// Device commands related APIs

#ifdef __cplusplus
}
#endif

#endif // ANCAD_IMPL
